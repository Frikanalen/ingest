# generated by datamodel-codegen:
#   filename:  hook_request.schema.json
#   timestamp: 2025-06-18T22:22:34+00:00

from __future__ import annotations

from typing import Dict, List, Optional

from pydantic import BaseModel, Extra


class Header(BaseModel):
    __root__: Optional[Dict[str, List[str]]] = None


class MetaData(BaseModel):
    __root__: Optional[Dict[str, str]] = None


class FileInfo(BaseModel):
    class Config:
        extra = Extra.forbid

    ID: str
    Size: int
    SizeIsDeferred: bool
    Offset: int
    MetaData: MetaData
    IsPartial: bool
    IsFinal: bool
    PartialUploads: List[str]
    Storage: Dict[str, str]


class HTTPRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    Method: str
    URI: str
    RemoteAddr: str
    Header: Header


class HookEvent(BaseModel):
    class Config:
        extra = Extra.forbid

    Upload: FileInfo
    HTTPRequest: HTTPRequest


class HookRequest(BaseModel):
    class Config:
        extra = Extra.forbid

    Type: str
    Event: HookEvent


class Model(BaseModel):
    __root__: HookRequest
